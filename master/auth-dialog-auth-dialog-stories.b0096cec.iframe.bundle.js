(globalThis.webpackChunk_jetbrains_ring_ui=globalThis.webpackChunk_jetbrains_ring_ui||[]).push([[302],{"./node_modules/@jetbrains/icons/chevron-10px.js":module=>{module.exports='<svg xmlns="http://www.w3.org/2000/svg" width="10" height="10" viewBox="0 0 10 10"><g><polygon points="5 7.99 1.5 4.5 2.5 3.5 5 6.01 7.5 3.5 8.49 4.5 5 7.99"/></g></svg>'},"./node_modules/@jetbrains/icons/close.js":module=>{module.exports='<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M13.442 2.558a.625.625 0 0 1 0 .884L8.883 8.006l4.546 4.552a.625.625 0 1 1-.884.884L8 8.89l-4.545 4.55a.625.625 0 0 1-.884-.883l4.546-4.552-4.56-4.564a.625.625 0 1 1 .885-.884L8 7.122l4.558-4.564a.625.625 0 0 1 .884 0Z" clip-rule="evenodd"/></svg>'},"./src/auth-dialog/auth-dialog.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{authDialog:()=>authDialog,default:()=>auth_dialog_stories});var react=__webpack_require__("./node_modules/react/index.js"),button_button=__webpack_require__("./src/button/button.tsx"),auth_dialog=__webpack_require__("./src/auth-dialog/auth-dialog.tsx");const youtrack=__webpack_require__.p+"e4031d364a3f0349c249d7e11b786091.svg";function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const auth_dialog_stories={title:"Components/Auth Dialog",parameters:{storySource:{source:"import React from 'react';\n\n\nimport Button from '../button/button';\n\nimport AuthDialog from './auth-dialog';\n\n\nimport youtrackLogo from '!file-loader!@jetbrains/logos/youtrack/youtrack.svg';\n\n\nexport default {\n  title: 'Components/Auth Dialog',\n\n  parameters: {\n    notes: 'A component that shows an authentication dialog.',\n    hermione: {captureSelector: '*[data-test~=ring-dialog]'},\n    a11y: {element: '#storybook-root,*[data-test~=ring-dialog]'}\n  }\n};\n\ninterface AuthDialogArgs {\n  onConfirm: () => void\n  onCancel: () => void\n}\nexport const authDialog = ({onConfirm, onCancel}: AuthDialogArgs) => {\n  class AuthDialogDemo extends React.Component {\n    state = {\n      confirm: {\n        show: true,\n        onConfirm: () => {},\n        onReject: () => {}\n      }\n    };\n\n    componentDidMount() {\n      this.showAuthDialog();\n    }\n\n    hideAuthDialog = () => {\n      this.setState({confirm: {show: false}});\n    };\n\n    showAuthDialog = () =>\n      new Promise<void>((resolve, reject) => {\n        this.setState({\n          confirm: {\n            show: true,\n            errorMessage: 'Authorization is required',\n            serviceName: 'YouTrack',\n            onConfirm: () => {\n              this.hideAuthDialog();\n              resolve();\n            },\n            onCancel: () => {\n              this.hideAuthDialog();\n              reject();\n            }\n          }\n        });\n      }).\n        then(onConfirm).\n        catch(onCancel);\n\n    render() {\n      return (\n        <div>\n          <div>\n            <Button onClick={this.showAuthDialog}>Show dialog</Button>\n          </div>\n          <AuthDialog\n            {...this.state.confirm}\n            serviceImage={youtrackLogo}\n            confirmLabel=\"Log in\"\n            cancelLabel=\"Stay a guest\"\n          />\n        </div>\n      );\n    }\n  }\n\n  return <AuthDialogDemo/>;\n};\n\nauthDialog.argTypes = {onConfirm: {}, onCancel: {}};\n",locationsMap:{"auth-dialog":{startLoc:{col:26,line:26},endLoc:{col:1,line:83},startBody:{col:26,line:26},endBody:{col:1,line:83}}}},notes:"A component that shows an authentication dialog.",hermione:{captureSelector:"*[data-test~=ring-dialog]"},a11y:{element:"#storybook-root,*[data-test~=ring-dialog]"}}},authDialog=({onConfirm,onCancel})=>{class AuthDialogDemo extends react.Component{state={confirm:{show:!0,onConfirm:()=>{},onReject:()=>{}}};componentDidMount(){this.showAuthDialog()}hideAuthDialog=()=>{this.setState({confirm:{show:!1}})};showAuthDialog=()=>new Promise(((resolve,reject)=>{this.setState({confirm:{show:!0,errorMessage:"Authorization is required",serviceName:"YouTrack",onConfirm:()=>{this.hideAuthDialog(),resolve()},onCancel:()=>{this.hideAuthDialog(),reject()}}})})).then(onConfirm).catch(onCancel);render(){return react.createElement("div",null,react.createElement("div",null,react.createElement(button_button.Ay,{onClick:this.showAuthDialog},"Show dialog")),react.createElement(auth_dialog.A,_extends({},this.state.confirm,{serviceImage:youtrack,confirmLabel:"Log in",cancelLabel:"Stay a guest"})))}}return react.createElement(AuthDialogDemo,null)};authDialog.argTypes={onConfirm:{},onCancel:{}},authDialog.parameters={...authDialog.parameters,docs:{...authDialog.parameters?.docs,source:{originalSource:"({\n  onConfirm,\n  onCancel\n}: AuthDialogArgs) => {\n  class AuthDialogDemo extends React.Component {\n    state = {\n      confirm: {\n        show: true,\n        onConfirm: () => {},\n        onReject: () => {}\n      }\n    };\n    componentDidMount() {\n      this.showAuthDialog();\n    }\n    hideAuthDialog = () => {\n      this.setState({\n        confirm: {\n          show: false\n        }\n      });\n    };\n    showAuthDialog = () => new Promise<void>((resolve, reject) => {\n      this.setState({\n        confirm: {\n          show: true,\n          errorMessage: 'Authorization is required',\n          serviceName: 'YouTrack',\n          onConfirm: () => {\n            this.hideAuthDialog();\n            resolve();\n          },\n          onCancel: () => {\n            this.hideAuthDialog();\n            reject();\n          }\n        }\n      });\n    }).then(onConfirm).catch(onCancel);\n    render() {\n      return <div>\n          <div>\n            <Button onClick={this.showAuthDialog}>Show dialog</Button>\n          </div>\n          <AuthDialog {...this.state.confirm} serviceImage={youtrackLogo} confirmLabel=\"Log in\" cancelLabel=\"Stay a guest\" />\n        </div>;\n    }\n  }\n  return <AuthDialogDemo />;\n}",...authDialog.parameters?.docs?.source}}}},"./node_modules/util-deprecate/browser.js":(module,__unused_webpack_exports,__webpack_require__)=>{function config(name){try{if(!__webpack_require__.g.localStorage)return!1}catch(_){return!1}var val=__webpack_require__.g.localStorage[name];return null!=val&&"true"===String(val).toLowerCase()}module.exports=function deprecate(fn,msg){if(config("noDeprecation"))return fn;var warned=!1;return function deprecated(){if(!warned){if(config("throwDeprecation"))throw new Error(msg);config("traceDeprecation")?console.trace(msg):console.warn(msg),warned=!0}return fn.apply(this,arguments)}}}}]);
"use strict";(self.webpackChunk_jetbrains_ring_ui=self.webpackChunk_jetbrains_ring_ui||[]).push([[4014],{"./src/avatar/avatar.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{avatar:()=>avatar,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _avatar__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/avatar/avatar.tsx"),_avatar_example_datauri__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/avatar/avatar-example-datauri.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Avatar",parameters:{notes:"Displays an avatar. In case of a loading error an empty square is displayed."}},avatar=()=>{function Example(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:Object.entries(_avatar__WEBPACK_IMPORTED_MODULE_1__.o).map((([key,size])=>"number"==typeof size?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"avatar-demo",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_avatar__WEBPACK_IMPORTED_MODULE_1__.A,{size,url:_avatar_example_datauri__WEBPACK_IMPORTED_MODULE_2__.G}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_avatar__WEBPACK_IMPORTED_MODULE_1__.A,{size,username:"Jet Brains"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_avatar__WEBPACK_IMPORTED_MODULE_1__.A,{size,username:"ðŸ‘¹ðŸ™€"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_avatar__WEBPACK_IMPORTED_MODULE_1__.A,{size,username:"Jet Brains",round:!0}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_avatar__WEBPACK_IMPORTED_MODULE_1__.A,{size})]},key):null))})}return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Example,{})};avatar.parameters={storyStyles:"\n<style>\n  .avatar-demo {\n    display: flex;\n    justify-content: space-between;\n    width: 320px;\n    margin-bottom: 16px;\n  }\n</style>"},avatar.parameters={...avatar.parameters,docs:{...avatar.parameters?.docs,source:{originalSource:'() => {\n  function Example() {\n    return <div>\n        {Object.entries(Size).map(([key, size]) => typeof size === \'number\' ? <div className="avatar-demo" key={key}>\n              <Avatar size={size} url={avatarDataUri} />\n              <Avatar size={size} username="Jet Brains" />\n              <Avatar size={size} username="ðŸ‘¹ðŸ™€" />\n              <Avatar size={size} username="Jet Brains" round />\n              <Avatar size={size} />\n            </div> : null)}\n      </div>;\n  }\n  return <Example />;\n}',...avatar.parameters?.docs?.source}}}}}]);
(self.webpackChunk_jetbrains_ring_ui=self.webpackChunk_jetbrains_ring_ui||[]).push([[7812],{"./src/button-toolbar-ng/button-toolbar-ng.examples.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{basic:function(){return basic},default:function(){return button_toolbar_ng_examples}});var angular=__webpack_require__("./node_modules/angular/index.js"),angular_default=__webpack_require__.n(angular),angular_decorator=__webpack_require__("./.storybook/angular-decorator.js"),button_ng=__webpack_require__("./src/button-ng/button-ng.js"),button_group_ng=__webpack_require__("./src/button-group-ng/button-group-ng.js"),button_toolbar=__webpack_require__("./src/button-toolbar/button-toolbar.css"),button_toolbar_default=__webpack_require__.n(button_toolbar);const angularModule=angular_default().module("Ring.button-toolbar",[]);angularModule.directive("rgButtonToolbar",(function rgButtonToolbar(){return{restrict:"A",link:function link($scope,iElement){iElement[0].classList.add(...button_toolbar_default().buttonToolbar.split(" "))}}}));var button_toolbar_ng=angularModule.name,button_toolbar_ng_examples={title:"Legacy Angular/Button Toolbar Ng",decorators:[(0,angular_decorator.Z)()],parameters:{storySource:{source:"import angular from 'angular';\n\nimport angularDecorator, {APP_NAME} from '../../.storybook/angular-decorator';\n\nimport ButtonNG from '../button-ng/button-ng';\nimport ButtonGroupNg from '../button-group-ng/button-group-ng';\n\nimport ButtonToolbarNG from './button-toolbar-ng';\n\nexport default {\n  title: 'Legacy Angular/Button Toolbar Ng',\n  decorators: [angularDecorator()],\n\n  parameters: {\n    notes: 'Provides an Angular wrapper for Button Toolbar.'\n  }\n};\n\nexport const basic = () => {\n  angular.module(APP_NAME, [ButtonNG, ButtonToolbarNG, ButtonGroupNg]);\n\n  return `\n      <div rg-button-toolbar>\n        <rg-button mode=\"primary\" delayed=\"true\">Run</rg-button>\n        <div rg-button-group>\n          <rg-button>Button one</rg-button>\n          <rg-button>Button two</rg-button>\n          <rg-button disabled>Button three</rg-button>\n        </div>\n        <rg-button>Another action</rg-button>\n      </div>\n    `;\n};\n\nbasic.storyName = 'Button Toolbar Ng';\n",locationsMap:{basic:{startLoc:{col:21,line:19},endLoc:{col:1,line:33},startBody:{col:21,line:19},endBody:{col:1,line:33}}}},notes:"Provides an Angular wrapper for Button Toolbar."}};const basic=()=>(angular_default().module(angular_decorator.i,[button_ng.Z,button_toolbar_ng,button_group_ng.Z]),'\n      <div rg-button-toolbar>\n        <rg-button mode="primary" delayed="true">Run</rg-button>\n        <div rg-button-group>\n          <rg-button>Button one</rg-button>\n          <rg-button>Button two</rg-button>\n          <rg-button disabled>Button three</rg-button>\n        </div>\n        <rg-button>Another action</rg-button>\n      </div>\n    ');basic.storyName="Button Toolbar Ng"},"./src/button-toolbar/button-toolbar.css":function(module,__unused_webpack_exports,__webpack_require__){var API=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),domAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),insertFn=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),setAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),styleTagTransformFn=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),content=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./src/button-toolbar/button-toolbar.css");content=content.__esModule?content.default:content;var options={};options.styleTagTransform=styleTagTransformFn,options.setAttributes=setAttributes,options.insert=insertFn.bind(null,"head"),options.domAPI=domAPI,options.insertStyleElement=insertStyleElement;API(content,options);module.exports=content&&content.locals||{}}}]);
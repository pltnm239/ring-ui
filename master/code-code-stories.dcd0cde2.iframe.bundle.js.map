{"version":3,"file":"code-code-stories.dcd0cde2.iframe.bundle.js","mappings":";;;;;AAoFA","sources":["webpack://@jetbrains/ring-ui/./src/code/code.stories.tsx"],"sourcesContent":["import javascript from 'highlight.js/lib/languages/javascript';\nimport xml from 'highlight.js/lib/languages/xml';\n\n\nimport Code, {code, highlight} from './code';\n\nhighlight.registerLanguage('javascript', javascript);\nhighlight.registerLanguage('xml', xml);\n\nexport default {\n  title: 'Components/Code',\n\n  parameters: {\n    notes: `\nDisplays a block of code. Syntax highlighting is loaded lazily using [dynamic imports](https://webpack.js.org/api/module-methods/#import-1).\n\nYou can also preload the languages you need:\n\n\\`import {highlight} from '../code/code'\\`\n\n\\`import 1c from 'highlight.js/lib/languages/1c';\\`\n\n\\`highlight.registerLanguage('1c', 1c);\\`\n    `\n  }\n};\n\nexport const basic = () => (\n  <Code\n    code={`\n          import React, {Component} from 'react';\n          import ChildComponent from './child-component';\n\n          const MyComponent = () => (\n            <div>\n              <ChildComponent/>\n            </div>\n          );\n        `}\n  />\n);\n\nbasic.storyName = 'basic';\n\nexport const lazy = () => (\n  <Code\n    language=\"actionscript\"\n    code={`\n      package org.example.dummy {\n          import org.dummy.*;\n\n          /*define package inline interface*/\n          public interface IFooBarzable {\n              public function foo(... pairs):Array;\n          }\n\n          public class FooBar implements IFooBarzable {\n              static private var cnt:uint = 0;\n              private var bar:String;\n\n              //constructor\n              public function TestBar(bar:String):void {\n                  bar = bar;\n                  ++cnt;\n              }\n\n              public function foo(... pairs):Array {\n                  pairs.push(bar);\n                  return pairs;\n              }\n          }\n      }\n    `}\n  />\n);\n\nexport const taggedTemplate = () =>\n  code`\n      import React from 'react';\n      import {code} from '../code/code';\n\n      const el = code\\`some('js')\\`;\n    `;\n\ntaggedTemplate.storyName = 'tagged template';\n\ntaggedTemplate.parameters = {\n  screenshots: {skip: true}\n};\n"],"names":[],"sourceRoot":""}
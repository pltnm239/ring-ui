"use strict";(self.webpackChunk_jetbrains_ring_ui=self.webpackChunk_jetbrains_ring_ui||[]).push([[498],{"./.storybook/react-decorator.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react_dom_client__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-dom/client.js"),_storybook_preview_api__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("@storybook/preview-api");const reactDecorator=(StoryFn,context)=>{const node=(0,_storybook_preview_api__WEBPACK_IMPORTED_MODULE_2__.useMemo)((()=>document.createElement("div")),[context.kind,context.name]),root=(0,_storybook_preview_api__WEBPACK_IMPORTED_MODULE_2__.useMemo)((()=>(0,react_dom_client__WEBPACK_IMPORTED_MODULE_1__.createRoot)(node)),[node]);return(0,_storybook_preview_api__WEBPACK_IMPORTED_MODULE_2__.useEffect)((()=>()=>root.unmount()),[root]),root.render(react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.StrictMode,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(StoryFn,null))),node},__WEBPACK_DEFAULT_EXPORT__=()=>reactDecorator},"./src/confirm-service/confirm-service.examples.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{confirmService:()=>confirmService,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_storybook_react_decorator__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./.storybook/react-decorator.tsx"),_button_button__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/button/button.tsx"),_confirm_service__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/confirm-service/confirm-service.tsx");const __WEBPACK_DEFAULT_EXPORT__={title:"Services/Confirm Service",decorators:[(0,_storybook_react_decorator__WEBPACK_IMPORTED_MODULE_1__.Z)()],parameters:{storySource:{source:"import React from 'react';\n\nimport reactDecorator from '../../.storybook/react-decorator';\n\nimport Button from '../button/button';\n\nimport confirm, {hideConfirm} from './confirm-service';\n\nexport default {\n  title: 'Services/Confirm Service',\n  decorators: [reactDecorator()],\n\n  parameters: {\n    notes:\n      ' wrapper for the Confirm component. Allows showing the confirmation dialog * without mounting the Confirm component first. Can be used outside React.',\n    hermione: {captureSelector: '*[data-test~=ring-dialog]'},\n    a11y: {element: '#storybook-root,*[data-test~=ring-dialog]'}\n  }\n};\n\ninterface ConfirmServiceArgs {\n  onConfirm: () => void\n  onCancel: () => void\n}\nexport const confirmService = ({onConfirm, onCancel}: ConfirmServiceArgs) => {\n  class ConfirmDemo extends React.Component {\n    componentDidMount() {\n      this.showConfirm();\n    }\n\n    componentWillUnmount() {\n      hideConfirm();\n    }\n\n    showConfirm = () =>\n      confirm({text: 'Do you really wish to proceed?'}).\n        then(onConfirm).\n        catch(onCancel);\n\n    showWithAnotherText = () =>\n      confirm({\n        text: 'There is another confirmation',\n        description: 'Confirmation description',\n        confirmLabel: 'OK',\n        rejectLabel: 'Cancel',\n        cancelIsDefault: true,\n        onBeforeConfirm: () => new Promise(resolve => setTimeout(resolve, 1000))\n      }).\n        then(onConfirm).\n        catch(onCancel);\n\n    render() {\n      return (\n        <div>\n          <Button onClick={this.showConfirm}>Show confirm</Button>\n          <Button onClick={this.showWithAnotherText}>Show another message</Button>\n        </div>\n      );\n    }\n  }\n\n  return <ConfirmDemo/>;\n};\n\nconfirmService.argTypes = {onConfirm: {}, onCancel: {}};\n",locationsMap:{"confirm-service":{startLoc:{col:30,line:25},endLoc:{col:1,line:63},startBody:{col:30,line:25},endBody:{col:1,line:63}}}},notes:" wrapper for the Confirm component. Allows showing the confirmation dialog * without mounting the Confirm component first. Can be used outside React.",hermione:{captureSelector:"*[data-test~=ring-dialog]"},a11y:{element:"#storybook-root,*[data-test~=ring-dialog]"}}},confirmService=_ref=>{let{onConfirm,onCancel}=_ref;class ConfirmDemo extends react__WEBPACK_IMPORTED_MODULE_0__.Component{componentDidMount(){this.showConfirm()}componentWillUnmount(){(0,_confirm_service__WEBPACK_IMPORTED_MODULE_2__.Vn)()}showConfirm=()=>(0,_confirm_service__WEBPACK_IMPORTED_MODULE_2__.ZP)({text:"Do you really wish to proceed?"}).then(onConfirm).catch(onCancel);showWithAnotherText=()=>(0,_confirm_service__WEBPACK_IMPORTED_MODULE_2__.ZP)({text:"There is another confirmation",description:"Confirmation description",confirmLabel:"OK",rejectLabel:"Cancel",cancelIsDefault:!0,onBeforeConfirm:()=>new Promise((resolve=>setTimeout(resolve,1e3)))}).then(onConfirm).catch(onCancel);render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_button_button__WEBPACK_IMPORTED_MODULE_3__.ZP,{onClick:this.showConfirm},"Show confirm"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_button_button__WEBPACK_IMPORTED_MODULE_3__.ZP,{onClick:this.showWithAnotherText},"Show another message"))}}return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ConfirmDemo,null)};confirmService.argTypes={onConfirm:{},onCancel:{}},confirmService.__docgenInfo={description:"",methods:[],displayName:"confirmService",props:{onConfirm:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},onCancel:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/confirm-service/confirm-service.examples.tsx"]={name:"confirmService",docgenInfo:confirmService.__docgenInfo,path:"src/confirm-service/confirm-service.examples.tsx"})}}]);
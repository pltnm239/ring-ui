{"version":3,"file":"main.8177d551cb238465e6a8.bundle.js","sources":["webpack:///./components/icon/icon__svg.js"],"sourcesContent":["// Inspired by https://github.com/sairion/svg-inline-react\nimport React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport {pure} from 'recompose';\n\nimport sniffer from '../global/sniffer';\n\nimport styles from './icon.css';\n\nconst isIE = sniffer.browser.name === 'ie';\n\nfunction convertReactSVGDOMProperty(str) {\n  return str.replace(/[-|:]([a-z])/g, g => g[1].toUpperCase());\n}\n\nfunction serializeAttrs(map) {\n  const res = {};\n  for (let i = 0; i < map.length; i++) {\n    const key = map[i].name;\n    let prop = key;\n    if (key === 'class') {\n      prop = 'className';\n    } else if (!key.startsWith('data-')) {\n      prop = convertReactSVGDOMProperty(key);\n    }\n\n    res[prop] = map[i].value;\n  }\n  return res;\n}\n\nfunction getSVGFromSource(src) {\n  const svgContainer = document.createElement('div');\n  svgContainer.innerHTML = src;\n  const svg = svgContainer.firstElementChild;\n  svg.remove ? svg.remove() : svgContainer.removeChild(svg);\n  return svg;\n}\n\nfunction getSVGInnerHTML(svgNode) {\n  if (!isIE) {\n    return svgNode.innerHTML;\n  }\n  // IE11 doesn't support svg.innerHTML https://stackoverflow.com/questions/28129956/get-innerhtml-of-svg-tag-result-in-undefined-in-ie\n  const serializer = new XMLSerializer();\n\n  return Array.from(svgNode.childNodes).\n    map(child => serializer.serializeToString(child)).\n    join('');\n}\n\nfunction extractSVGProps(svgNode) {\n  const map = svgNode.attributes;\n  return (map.length > 0) ? serializeAttrs(map) : null;\n}\n\nfunction isCompatibilityMode(iconSrc) {\n  const hasWidth = /width=\"[\\d\\.]+\"/ig.test(iconSrc);\n  const hasHeight = /height=\"[\\d\\.]+\"/ig.test(iconSrc);\n  return !hasWidth || !hasHeight;\n}\n\nfunction IconSVG({src, className, ...rest}) {\n  const glyphClasses = classNames(styles.glyph, {\n    [styles.compatibilityMode]: isCompatibilityMode(src)\n  }, className);\n\n  const svgNode = getSVGFromSource(src);\n\n  return (\n    <svg\n      {...extractSVGProps(svgNode)}\n      {...rest}\n      className={glyphClasses}\n      dangerouslySetInnerHTML={{\n        __html: getSVGInnerHTML(svgNode)\n      }}\n    />\n  );\n}\n\nIconSVG.propTypes = {\n  className: PropTypes.string,\n  src: PropTypes.string.isRequired,\n  style: PropTypes.object\n};\n\nexport default pure(IconSVG);\n"],"mappings":"AAUA","sourceRoot":""}
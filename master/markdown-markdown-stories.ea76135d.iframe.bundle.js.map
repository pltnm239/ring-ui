{"version":3,"file":"markdown-markdown-stories.ea76135d.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2MA","sources":["webpack://@jetbrains/ring-ui/./src/markdown/markdown.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = \"import React from 'react';\\n\\nimport javascript from 'highlight.js/lib/languages/javascript';\\n\\nimport xml from 'highlight.js/lib/languages/xml';\\n\\nimport reactDecorator from '../../.storybook/react-decorator';\\n\\nimport {highlight} from '../code/code';\\n\\nimport Markdown, {md} from './markdown';\\n\\nhighlight.registerLanguage('javascript', javascript);\\nhighlight.registerLanguage('xml', xml);\\n\\nexport default {\\n  title: 'Components/Markdown',\\n  decorators: [reactDecorator()],\\n\\n  parameters: {\\n    notes: 'Renders Markdown.'\\n  }\\n};\\n\\nexport const basic = () => (\\n  <Markdown>{`\\n          # Header\\n\\n          _Various_ types of **highlighting**\\n\\n          [Link](/)\\n\\n          [Link with definition][definition]\\n\\n          [definition]: /\\n\\n          > Blockquote\\n          >\\n          > Second line\\n\\n          Unordered list:\\n\\n          * List\\n          * List\\n\\n          Ordered list:\\n\\n          1. One\\n          2. Two\\n\\n          Horizontal line\\n\\n          | Some | Table |\\n          | --- | --- |\\n          | One | Two |\\n\\n          ---\\n          Some \\\\`inline(code)\\\\` inside text\\n\\n          ## Block code\\n          \\\\`\\\\`\\\\`js\\n          import React, {Component} from 'react';\\n          import ChildComponent from './child-component';\\n\\n          const MyComponent = () => (\\n            <div className=\\\"class\\\">\\n              <ChildComponent prop=\\\"value\\\" />\\n            </div>\\n          );\\n          \\\\`\\\\`\\\\`\\n        `}\\n  </Markdown>\\n);\\n\\nbasic.storyName = 'basic';\\n\\nexport const taggedTemplate = () =>\\n  md`\\n    # Header\\n\\n    _Various_ types of **highlighting**\\n\\n    [Link](/)\\n\\n    [Link with definition][definition]\\n\\n    [definition]: /\\n\\n    > Blockquote\\n    >\\n    > Second line\\n\\n    Unordered list:\\n\\n    * List\\n    * List\\n\\n    Ordered list:\\n\\n    1. One\\n    2. Two\\n\\n    Horizontal line\\n\\n    ---\\n    Some \\\\`inline(code)\\\\` inside text\\n\\n    ## Block code\\n    \\\\`\\\\`\\\\`js\\n    import React from 'react';\\n\\n    import {md} from '@jetbrains/ring-ui/components/markdown/markdown';\\n\\n    const MarkdownHeader = ({children}) => md\\\\`#\\\\${children}\\\\`;\\n    \\\\`\\\\`\\\\`\\n  `;\\n\\ntaggedTemplate.storyName = 'tagged template';\\n\";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  \"basic\": {\n    \"startLoc\": {\n      \"col\": 21,\n      \"line\": 25\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 73\n    },\n    \"startBody\": {\n      \"col\": 21,\n      \"line\": 25\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 73\n    }\n  },\n  \"taggedTemplate\": {\n    \"startLoc\": {\n      \"col\": 30,\n      \"line\": 77\n    },\n    \"endLoc\": {\n      \"col\": 3,\n      \"line\": 116\n    },\n    \"startBody\": {\n      \"col\": 30,\n      \"line\": 77\n    },\n    \"endBody\": {\n      \"col\": 3,\n      \"line\": 116\n    }\n  }\n};\n    \nimport React from 'react';\n\nimport javascript from 'highlight.js/lib/languages/javascript';\n\nimport xml from 'highlight.js/lib/languages/xml';\n\nimport reactDecorator from '../../.storybook/react-decorator';\n\nimport {highlight} from '../code/code';\n\nimport Markdown, {md} from './markdown';\n\nhighlight.registerLanguage('javascript', javascript);\nhighlight.registerLanguage('xml', xml);\n\nexport default {\n  title: 'Components/Markdown',\n  decorators: [reactDecorator()],\n\n  parameters: {\n  \"storySource\": {\n    \"source\": \"import React from 'react';\\n\\nimport javascript from 'highlight.js/lib/languages/javascript';\\n\\nimport xml from 'highlight.js/lib/languages/xml';\\n\\nimport reactDecorator from '../../.storybook/react-decorator';\\n\\nimport {highlight} from '../code/code';\\n\\nimport Markdown, {md} from './markdown';\\n\\nhighlight.registerLanguage('javascript', javascript);\\nhighlight.registerLanguage('xml', xml);\\n\\nexport default {\\n  title: 'Components/Markdown',\\n  decorators: [reactDecorator()],\\n\\n  parameters: {\\n    notes: 'Renders Markdown.'\\n  }\\n};\\n\\nexport const basic = () => (\\n  <Markdown>{`\\n          # Header\\n\\n          _Various_ types of **highlighting**\\n\\n          [Link](/)\\n\\n          [Link with definition][definition]\\n\\n          [definition]: /\\n\\n          > Blockquote\\n          >\\n          > Second line\\n\\n          Unordered list:\\n\\n          * List\\n          * List\\n\\n          Ordered list:\\n\\n          1. One\\n          2. Two\\n\\n          Horizontal line\\n\\n          | Some | Table |\\n          | --- | --- |\\n          | One | Two |\\n\\n          ---\\n          Some \\\\`inline(code)\\\\` inside text\\n\\n          ## Block code\\n          \\\\`\\\\`\\\\`js\\n          import React, {Component} from 'react';\\n          import ChildComponent from './child-component';\\n\\n          const MyComponent = () => (\\n            <div className=\\\"class\\\">\\n              <ChildComponent prop=\\\"value\\\" />\\n            </div>\\n          );\\n          \\\\`\\\\`\\\\`\\n        `}\\n  </Markdown>\\n);\\n\\nbasic.storyName = 'basic';\\n\\nexport const taggedTemplate = () =>\\n  md`\\n    # Header\\n\\n    _Various_ types of **highlighting**\\n\\n    [Link](/)\\n\\n    [Link with definition][definition]\\n\\n    [definition]: /\\n\\n    > Blockquote\\n    >\\n    > Second line\\n\\n    Unordered list:\\n\\n    * List\\n    * List\\n\\n    Ordered list:\\n\\n    1. One\\n    2. Two\\n\\n    Horizontal line\\n\\n    ---\\n    Some \\\\`inline(code)\\\\` inside text\\n\\n    ## Block code\\n    \\\\`\\\\`\\\\`js\\n    import React from 'react';\\n\\n    import {md} from '@jetbrains/ring-ui/components/markdown/markdown';\\n\\n    const MarkdownHeader = ({children}) => md\\\\`#\\\\${children}\\\\`;\\n    \\\\`\\\\`\\\\`\\n  `;\\n\\ntaggedTemplate.storyName = 'tagged template';\\n\",\n    \"locationsMap\": {\n      \"basic\": {\n        \"startLoc\": {\n          \"col\": 21,\n          \"line\": 25\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 73\n        },\n        \"startBody\": {\n          \"col\": 21,\n          \"line\": 25\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 73\n        }\n      },\n      \"tagged-template\": {\n        \"startLoc\": {\n          \"col\": 30,\n          \"line\": 77\n        },\n        \"endLoc\": {\n          \"col\": 3,\n          \"line\": 116\n        },\n        \"startBody\": {\n          \"col\": 30,\n          \"line\": 77\n        },\n        \"endBody\": {\n          \"col\": 3,\n          \"line\": 116\n        }\n      }\n    }\n  }\n,\n    notes: 'Renders Markdown.'\n  },};\n\nexport const basic = () => (\n  <Markdown>{`\n          # Header\n\n          _Various_ types of **highlighting**\n\n          [Link](/)\n\n          [Link with definition][definition]\n\n          [definition]: /\n\n          > Blockquote\n          >\n          > Second line\n\n          Unordered list:\n\n          * List\n          * List\n\n          Ordered list:\n\n          1. One\n          2. Two\n\n          Horizontal line\n\n          | Some | Table |\n          | --- | --- |\n          | One | Two |\n\n          ---\n          Some \\`inline(code)\\` inside text\n\n          ## Block code\n          \\`\\`\\`js\n          import React, {Component} from 'react';\n          import ChildComponent from './child-component';\n\n          const MyComponent = () => (\n            <div className=\"class\">\n              <ChildComponent prop=\"value\" />\n            </div>\n          );\n          \\`\\`\\`\n        `}\n  </Markdown>\n);;\n\nbasic.storyName = 'basic';\n\nexport const taggedTemplate = () =>\n  md`\n    # Header\n\n    _Various_ types of **highlighting**\n\n    [Link](/)\n\n    [Link with definition][definition]\n\n    [definition]: /\n\n    > Blockquote\n    >\n    > Second line\n\n    Unordered list:\n\n    * List\n    * List\n\n    Ordered list:\n\n    1. One\n    2. Two\n\n    Horizontal line\n\n    ---\n    Some \\`inline(code)\\` inside text\n\n    ## Block code\n    \\`\\`\\`js\n    import React from 'react';\n\n    import {md} from '@jetbrains/ring-ui/components/markdown/markdown';\n\n    const MarkdownHeader = ({children}) => md\\`#\\${children}\\`;\n    \\`\\`\\`\n  `;\n\ntaggedTemplate.storyName = 'tagged template';\n"],"names":[],"sourceRoot":""}